UserController 中有 create 方法，主要是用来注册

SessionController 中也有 create 方法，主要是用来登录和注册。

SessionController 中的 store 方法主要是用来限制登录的。
在登录的时候我们要对数据进行验证，并返回一个Token给用户。
避免不断查询数据库。性能考虑。

借助 Laravel 提供的 Auth 的 attempt 方法可以让我们很方便的完成用户的身份认证操作，如下所示：

if (Auth::attempt(['email' => $email, 'password' => $password])) {
    // 该用户存在于数据库，且邮箱和密码相符合
}
attempt 方法会接收一个数组来作为第一个参数，该参数提供的值将用于寻找数据库中的用户数据。因此在上面的例子中，attempt 方法执行的代码逻辑如下：

使用 email 字段的值在数据库中查找；
如果用户被找到：
1). 先将传参的 password 值进行哈希加密，然后与数据库中 password 字段中已加密的密码进行匹配；
2). 如果匹配后两个值完全一致，会创建一个『会话』给通过认证的用户。会话在创建的同时，也会种下一个名为 laravel_session 的 HTTP Cookie，以此 Cookie 来记录用户登录状态，最终返回 true；
3). 如果匹配后两个值不一致，则返回 false；
如果用户未找到，则返回 false。

$credentials = [
	'email' => $request->email,
	'password' => $request->password,
];

if (Auth::attempt($credentials)){
	session()->flash('success','欢迎再次来到xxx世界');
	return redirect()->route('users.show', [Auth::$user()]);
}else{
	session()->flash('danger','很抱歉，您的邮箱和密码不匹配');
}

如果验证成功，则返回session，然后重定向到用户界面
否则，返回session，并返回到上个界面

[Auth::user()]  刚才提示。variable user不存在
是因为[Auth::$user()] 引用了变量，然而并没有这个变量


因为登录成功界面和未登录的没有太大区别，所以要对导航条进行调整
登录成功时在顶部显示当前用户的用户名，并添加退出按钮

登录时候判断是否还在线
<header class="navbar navbar-fixed-top navbar-inverse">
    <div class="container">
        <div class="col-md-offset-1 col-md-10">
            <a href="/" id="logo">Laravel App</a>
            <nav>
                <ul class="nav navbar-nav navbar-right">
                @if(Auth::check())


退出
<form action="{{ route('logout') }}" method="POST">
  {{ csrf_field() }}
  {{ method_field('DELETE') }}
  <button class="btn btn-block btn-danger" type="submit" name="button">退出</button>
</form>

可以看到用户退出登录的按钮实际上是一个表单的提交按钮，在点击退出按钮之后浏览器将向 /logout 地址发送一个 POST 请求。但由于 RESTful 架构中会使用 DELETE 请求来删除一个资源，当用户退出时，实际上相当于删除了用户登录会话的资源，因此这里的退出操作需要使用 DELETE 请求来发送给服务器。由于浏览器不支持发送 DELETE 请求，因此我们需要使用一个隐藏域来伪造 DELETE 请求。

在 Blade 模板中，我们可以使用 method_field 方法来创建隐藏域。


一直取不到下拉列表，原来是我写少了个斜杠。狗日的。！错误：<script src="js/app.js"></script>
console：提示报错：GET http://homestead.app/users/js/app.js net::ERR_ABORTED

<script src="/js/app.js"></script>

修改后console还有个报错
app.js:820 CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token

let token = document.head.querySelector('meta[name="csrf-token"]');

if (token) {
    window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;
} else {
    console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');
}

Laravel 默认创建了一个 JavaScript 变量，此变量会从页面的元标签中取 CSRF 密钥，取不到就会报错。本教程中我们不需要使用到该变量，把以上代码删除即可。

让我们接着对用户控制器的 store 方法进行更改，让用户注册成功后自动登录。

UserController 类中的 store方法添加：
        Auth::login($user);


在用户退出的时候发生了一些问题，由于我的路由设置错误
Route::get('logout','SessionController@destroy')->name('logout');
原本应该是：
Route::delete('logout','SessionController@destroy')->name('logout');

导致退出的时候提示route exception
Symfony \ Component \ HttpKernel \ Exception \ MethodNotAllowedHttpException

/home/vagrant/Code/Laravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php

一直不得其解，然后看用户留言，发现别人说用any即可，然后检查代码，发现在destory方法的路由里面写错了
总算了解了。







